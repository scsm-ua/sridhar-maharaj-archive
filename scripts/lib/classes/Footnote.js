var SCRIPTURES = [
    {"шветашватара упанишад": "Шветашватара-упанишад"},
    {"бхакти расамрита синдху": "Бхакти-расамрита-синдху"},
    {"веданта сутра": "Веданта-сутра"},
    {"ману самхита": "Ману-самхита"},
    {"шримад бхагаватам": "Шримад-Бхагаватам"},

    {"бхагавад гита": "Бхагавад-гита",
        "бхагавад гиты": "Бхагавад-гита",
        "бхагавад гите": "Бхагавад-гита"},

    {"шрила бхактивинод тхакур шри шикшаштакам цикл песен": "Бхактивинод Тхакур, цикл песен: Шри Шикшаштакам"},
    {"всевышний господь шри чайтаньячандра шри шикшаштакам": "Шри Шикшаштакам"},

    {"гита говинда": "Шри Гита-Говинда"},
    {"риг веда": "Риг-веда"},
    {"брахма самхита": "Шри Брахма-самхита"},
    {"гита мала": "Гита-мала"},
    {"катха упанишад": "Катха-упанишад"},

    {"бхакти сандарбха": "Бхакти-сандарбха",
        "бхакти сандарбхе": "Бхакти-сандарбха"},

    {"таттва сандарбха": "Таттва-сандарбха"},
    {"бхагавад сандарбха": "Бхагавад-сандарбха"},
    {"хитопадеша": "Хитопадеша"},
    {"шад госвами аштака": "Шад-Госвами-аштака"},

    {"чайтанья чаритамрита антья": "«Шри Чайтанья-чаритамрита», Антья-лила",
        "чайтанья чаритамриты антья": "«Шри Чайтанья-чаритамрита», Антья-лила",
        "чайтанья чаритамриту антья": "«Шри Чайтанья-чаритамрита», Антья-лила",
        "чайтанья чаритамрите антья": "«Шри Чайтанья-чаритамрита», Антья-лила",
        "чайтанья чаритамрите антья": "«Шри Чайтанья-чаритамрита», Антья-лила"},

    {"чайтанья чаритамрита мадхья": "«Шри Чайтанья-чаритамрита», Мадхья-лила",
        "чайтанья чаритамрите мадхья": "«Шри Чайтанья-чаритамрита», Мадхья-лила",
        "чайтанья чаритамриты мадхья": "«Шри Чайтанья-чаритамрита», Мадхья-лила",
        "чайтанья чаритамриту мадхья": "«Шри Чайтанья-чаритамрита», Мадхья-лила"},

    {"чайтанья чаритамрита ади": "«Шри Чайтанья-чаритамрита», Ади-лила",
        "чайтанья чаритамрите ади": "«Шри Чайтанья-чаритамрита», Ади-лила",
        "чайтанья чаритамриты ади": "«Шри Чайтанья-чаритамрита», Ади-лила",
        "чайтанья чаритамриту ади": "«Шри Чайтанья-чаритамрита», Ади-лила"},
    
    {"поиск шри кришны": "Поиск Шри Кришны"},
    {"падьявали": "Падьявали"},
    {"гоптритве варана": "Гоптритве варана"},
    {"шаранагати": "Шаранагати"}, // 1
    {"вилапа кусуманджали": "Шри Вилапа-кусуманджали"},
    {"вилāпа кусумāн̃джали": "Шри Вилапа-кусуманджали"},
    {"шри кришнера аштоттара шата нама": "Шри Шри Кришнера аштоттара-шата-нама"},
    {"бхаджана рахасья вритти": "Бхаджана-рахасья-вритти"},
    {"према виварта": "Према-виварта"},
    {"падма пурана уттара": "«Падма-пурана», Уттара-кханда",
        "падма пураны уттара": "«Падма-пурана», Уттара-кханда"},
    {"према дхама дева стотрам": "Према-Дхама-Дева-стотрам"},
    {"гитамала ямуна бхававали": "«Гитамала», Ямуна-бхававали"},
    {"радха раса судха нидхи": "Радха-раса-судха-нидхи"},
    {"шри гуру парампара": "Шри Гуру-парампара"},

    {"чайтанья бхагавата мадхья": "«Шри Чайтанья Бхагавата», Мадхья-кханда",
        "чайтанья бхагаваты мадхья": "«Шри Чайтанья Бхагавата», Мадхья-кханда"},
    {"чайтанья бхагавата антья": "«Шри Чайтанья Бхагавата», Антья-кханда",
        "чайтанья бхагаваты антья": "«Шри Чайтанья Бхагавата», Антья-кханда"},
    {"чайтанья бхагавата ади": "«Шри Чайтанья Бхагавата», Ади-кханда",
        "чайтанья бхагаваты ади": "«Шри Чайтанья Бхагавата», Ади-кханда"},

    {"лалита аштака": "Шри Лалита-аштака"},
    {"шри дайита даса пранати панчакам": "Шри Дайита Даса Пранати Панчакам"},
    {"дайита дас дашакам": "Шри Шри Дайита Дас Дашакам"},
    {"прабхупада падма ставаках": "Шри Шри Прабхупада-падма Ставаках"},
    {"шриман нитьянанда двадашакам": "Шриман Нитьянанда Двадашакам"},
    {"нитай гунамани амара": "Нитай гунамани амара"},
    {"шримад бхактивинода вираха дашакам": "Шримад Бхактивинода-вираха Дашакам"},
    {"гитавали": "Гитавали"},
    {"прапанна дживанамритам": "Шри Шри Прапанна-дживанамритам"},
    // "прартхана": "Прартхана",
    {"сарвасва томара": "Сарвасва томара"},
    {"гитамахатмйам": "Гитамахатмйам"},
    {"гурваштака": "Шри Гурваштака"},
    {"ишопанишад": "Шри Ишопанишад"},
    {"прартханашрая чатурдашака": "Шри Прартханашрая-чатурдашака"},

    {"манах шикша": "Манах-шикша",
        "манах̣ ш́икш̣а̄": "Манах-шикша"},

    {"вайшнава ке": "Вайшнава ке"},
    {"мундака упанишад": "Мундака Упанишад"},
    {"таиттирия упанишад": "Таиттирия-упанишад"},
    {"махабхарата ади парва": "«Махабхарата», Ади-парва"},
    {"махабхарата удьога парва": "«Махабхарата», Удьога-парва"},

    {"махабхарата бхишма парва": "«Махабхараты», Бхишма-парва",
        "махабхараты бхишма парва": "«Махабхараты», Бхишма-парва"},
    
    {"махабхарата вана парва": "«Махабхараты», Вана-парва",
        "махабхараты вана парва": "«Махабхараты», Вана-парва"},
    
    {"анйа абхилаша чхади": "Анйа-абхилаша чхади",
        "анйа абхила̄ш̣а чха̄д̣и": "Анйа-абхилаша чхади"},

    {"джайва дхарма": "Джайва-дхарма",
        "джайва дхарме": "Джайва-дхарма"},

    {"хари бхакти виласа": "Хари-бхакти-виласа"},
    {"брихан нарадия пурана": "Брихан-нарадия-пурана"},
    {"катха упанишада": "Катха-Упанишада"},
    {"чхандогья упанишада": "Чхандогья-упанишада"},
    {"шветашватара упанишада": "Шветашватара-упанишада"},
    {"чайтанья чандрамрита": "Чайтанья-чандрамрита"},
    {"мукта чаритра": "Мукта Чаритра"},
    {"кальяна калпатару": "Кальяна-калпатару"},
    {"враджа виласа става": "Враджа-виласа-става"},
    {"шад госвами аштакам": "Шри Шад Госвами Аштакам"},
    {"кришна карнамрита": "Кришна-карнамрита"},

    {"брихад бхагаватамрита": "Брихад Бхагаватамрита",
        "брихад бхагаватамритам": "Брихад Бхагаватамрита"},
    
    {"намаштакам": "Намаштакам"},

    {"прартхана лаласа": "«Прартхана», Лаласа",
        "даинйа прартхана гити": "Даинйа Прартхана Гити",
        "шри прартхана": "Шри Прартхана"},

    {"шри дана кели чинтамани": "Шри Дана-кели Чинтамани"},
    {"шри лалита аштакам": "Шри Лалита-аштакам"},
    {"упадешамрита": "Шри Упадешамрита"},
    {"кабе муи вайшнава чинибо": "Кабе муи вайшнава чинибо"},
    {"шримад гауракишора намаскара дашакам": "Шри Шримад Гауракишора-намаскара Дашакам"},
    {"рупануга махатмья": "Шри рупануга-махатмья"},
    {"акродха парамананда": "Акродха парамананда"},
    {"джанама сапхала тара": "Джанама сапхала тара"},
    {"радхаштака": "Шри Радхаштака"},
    {"бхаджана лаласа": "Бхаджана-лаласа"},
    {"чайтаньяштака": "Шри Чайтаньяштака"},
    {"кали гхора тимире": "Кали-гхора тимире"},
    {"ригведа": "Ригведа"},
    {"кабе шри чаитанйа море корибена дойа": "Кабе шри чаитанйа море корибена дойа"},
    {"гауранга каруна коро": "Гауранга каруна коро"},
    {"нитай пада камала": "Нитай-Пада-Камала"},
    {"рагхувамша": "Рагхувамша"},

    {"вишну пурана": "Вишну-пурана",
        "вишну пураны": "Вишну-пурана",
        "виш̣н̣у пура̄н̣а": "Вишну-пурана"},

    {"мангалачарана": "Мангалачарана"},
    {"наваграха стотра": "Наваграха стотра"},
    {"нама санкиртан": "Нама-санкиртан"},
    {"слово хранителя преданности": "Слово Хранителя Преданности"},

    {"ачарья вандана": "Ачарья вандана",
        "а̄ча̄рйа вандана": "Ачарья вандана"},

    {"шри нама": "Шри Нама"},
    {"шуддха бхаката": "Шуддха-бхаката"},
    {"манаса дехо гехо": "Манаса дехо гехо"},
    {"саи кева сунаило шйама нама": "Саи, Кева Сунаило Шйама-нама"},
    {"даинья прапатти": "Даинья о прапатти"},  
    {"ману смрити": "Ману-смрити"},
    {"атма самарпане": "Атма-самарпане"},
    {"ш́рӣ кр̣ш̣н̣ера вим̇соттара ш́ата на̄ма": "Ш́рӣ Кр̣ш̣н̣ера Вим̇соттара-ш́ата-на̄ма"},
    {"чаураграганья пуруша аштака": "Шри Чаураграганья-пуруша-аштака"},
    {"радха бхаджана махима": "Шри Радха-бхаджана махима"},
    {"хари бхакти виласа прабхаса кханда": "«Хари-бхакти-виласа», Прабхаса-кханда"},
    {"пратхама йама садхана шраддха": "Пратхама-йама садхана - Шраддха"},
    {"таиттирийа упанишад": "Таиттирийа-упанишад"},
    {"према бхакти чандрика": "Шри Према-бхакти-чандрика"},

    {"тайттирия упанишад": "Тайттирия-упанишад",
        "чхандогья упанишад": "Чхандогья-упанишад"},

    // TOOD: find matches.
    {"лагху бхагаватамрите": "Лагху-бхагаватамрита",
        "лагху бхагаватамрита": "Лагху-бхагаватамрита"},

    {"видагдха мадхава": "Видагдха-мадхава"},
    {"шрингара бхеда пракарана": "«Уджджвала-ниламани», Шрингара-бхеда-пракарана"},
    {"мукунда мала стотра": "Мукунда-мала-стотра"},
    {"чайтанья чандродая натака": "Шри Чайтанья-чандродая-натака"},
    {"хари бхакти судходая": "Хари-бхакти-судходая"},
    {"бхакти анукула матра": "Бхакти-анукула-матра"},
    // {"чайтанья бхагавата": "Чайтанья-Бхагавата"}


];

var NAMES_SEARCH_SHORTCUTS = {
    'даинья прапатти': 'даинья о прапатти',
    'чайтанья чаритамрите антья': ['антья лила', 'антья лиле'],
    'чайтанья бхагавата мадхья': ['мадхья лила', 'мадхья лиле'],
    'чайтанья чаритамриты мадхья': ['мадхья лила', 'мадхья лилы', 'мадхья лиле'],
    'чайтанья чаритамрита антья': ['антья лила', 'антья лиле', 'антья лилы'],
    'чайтанья чаритамриты ади': ['ади лила', 'ади лилы', 'ади лиле'],
    'чайтанья бхагаваты мадхья': ['мадхья кханды'],
    'чайтанья чаритамрита мадхья': ['мадхья лила', 'мадхья лиле'],
    'чайтанья чаритамрите мадхья': ['мадхья лила', 'мадхья лиле'],
    'чайтанья чаритамрите ади': ['ади лила', 'ади лиле'],
};

var SHLOKAS = [
    [
    '*мӯкам̇ кароти ва̄ча̄лам̇ пан̇гум̇ лан̇гхайате гирим / йат-кр̣па̄ там ахам̇ ванде ш́рӣ-гурум̇ дӣна-та̄ран̣ам*',
    '*мӯкам̇ каротива̄ча̄лам̇ пан̇гум̇ лан̇гхайатегирим / йат-кр̣па̄ там ахам̇ вандеш́рӣ-гурум̇ дӣна-та̄ран̣ам*',
    ],
    '*кр̣ш̣н̣а-анусандха̄на*',
    '*ом аджнанад йади ва мохат прачйаветадхарешу йат, смаранадева тад-вишнох сампурнах сйадити шрутих / ом прийатам пундари-какшах сарва-йаджнешварохарих, тасминстуште джагат-туштам прините принитам джагат*',
    '*ва̄н̃чха̄-калпатарубхйаш́’ ча кр̣па̄-синдхубхйа эва ча / патита̄на̄м̇ па̄ванебхйо ваиш̣н̣авебхйо намо намах̣*',
    '*акхила-расамрита-муртих*',
    '*чето-дарпан̣а-ма̄рджанам̇ бхава-маха̄-да̄ва̄гни-нирва̄пан̣ам̇, ш́рейах̣-кайрава-чандрика̄-витаран̣ам̇ видйа̄-вадхӯ-джӣванам̇ / а̄нанда̄мбудхи-вардханам̇ прати-падам̇ пӯрн̣а̄мр̣та̄сва̄данам̇, сарва̄тма-снапанам̇ парам̇ виджайате ш́рӣ-кр̣ш̣н̣а-сан̇кӣрттанам*',
    '*сварупе сабара хайа голокете стхити*',
    [
    '*сакала чха̄д̣ийа̄ бха̄и ш́раддха̄девӣра гун̣а га̄и*',
    '*сакала чха̄д̣ийа̄ бха̄и ш́раддха̄девӣра гун̣а га̄и…*',
    ],
    [
    '*(йади) гаура на̄ хаита, табе ки хаита, кемане дхарита̄м де’ / према-раса-сӣма̄ ра̄дха̄ра махима̄, джагате джа̄на̄та ке?*',
    '*(йади) гаура на̄ хаита, табе ки хаита, кемане дхарита̄м де’ / ра̄дха̄ра махима̄ према-раса-сӣма̄, джагате джа̄на̄та ке?*',
    ],
    '*гаура-прабхох према-виласа-бхумау / нишкинчано бхакти-винода-нама*',
    [
    '*ма̄талахариджанакӣрттанаран̇ге / пӯджалара̄га-патхагаурава-бхан̇ге*',
    '*ма̄тала хариджана кӣрттана ран̇ге / пӯджала ра̄га-патха гаурава-бхан̇ге*',
    ],
    [
    '*асадху-санге бхай, кришна-нама нахи хайа / намакшарабахирайа бату нама кабхунайа*',
    '*асадху-санге бхай, кришна-нама нахи хайа / намакшара бахирайа бату нама кабху найа*',
    ],
    [
    '*бхаджа гаура̄н̇га каха гаура̄н̇га, лаха гаура̄н̇гера на̄ма / йен джана гаура̄н̇га бхадже, сеи хайа а̄ма̄р пра̄н̣а*',
    '*бхаджа гаура̄н̇га каха гаура̄н̇га / лаха гаура̄н̇гера на̄ма / йе джана гаура̄н̇га бхадже / сеи хайа а̄ма̄р пра̄н̣а*',
    ],
    '*бахиран̇ге сан̇ге каре на̄ма-сан̇кӣртана*',
    [
    '*бахубхир милитва йат киртанам тад эва санкиртанам*',
    '*бахубхир милитва йат киртанам*',
    ],
    '*асадху-санге бхаи «кршна нама» нахи хайа / «намакшара» бахирайа бате нама кабху найа*',
    '*йе ме бхакта-джанāх̣ пāртха на ме бхактāш́ ча те джанāх̣ / мад-бхактāнāм̇ ча йе бхактāс те ме бхакта-тамā матāх̣*',
    '*симха прасена мавадхит симхо джамбавата хатаха / шукумаарака маа родхишта тавахйеша сйамантака*',
    '*ом̇ аджн̃а̄на-тимира̄ндхасйа джн̃а̄на̄н̃джана-ш́ала̄кайа̄ / чакш̣ур унмилитам̇ йена тасмаи ш́рӣ-гураве намах̣*',
    '*харир эва сада̄ра̄дхйах̣ сарва-девеш́вареш́варах̣ / итаре брахма-рудра̄дйа̄ на̄ваджн̃ейа̄х̣ када̄чана*',
    '*адхах̣ кр̣там̇ атикра̄нтам̇ акш̣аджам̇ индрийа-джам̇ джн̃а̄нам̇ йена сах̣*',
    '*раджа пашйати карнабхйам, дхийа пашйанти пандитах / пашух пашйанти гандхена, бхуте пашйанти барбарах*',
    [
    '*сата̄м̇ нинда̄ на̄мнах̣ парам апара̄дхам̇ витануте / йатах̣ кхйа̄тим̇ йа̄там̇ катхамусахате тад виграха̄м*',
    '*сата̄м̇ нинда̄ на̄мнах̣ парам*',
    ],
    '*сурарше вихита шастре харим уддишйа йа крийа / ива бхактир ити прокта йа бхактих пара бхавет*',
    '*на̄мно бала̄д йасйа хи па̄па-буддхир / на видйате тасйа йамаир хи ш́уддхих̣*',
    '*ачиноти йах шастрартхам, ачаре стхапайатй апи / свайам ачарате йасма, ачарйас тена киртитах*',
    '*два̄парӣйаир джанаир вишн̣ух̣ пан̃чара̄траис ту кевалаих̣ / калау ту на̄ма-ма̄трен̣а пӯджйате бхагава̄н харих̣*',
    '*эка кришна-наме джато папа харе / папи хайа тато папа карибаре наре*',
    [
    '*сварӯпе саба̄ра хайа, голокете стхити*',
    '*сварӯпе саба̄ра хайа голокете стхити*',
    ],
    '*никхила-бхувана-ма̄йа̄-чхинна-виччхинна-картрӣ, вибудха-бахула-мр̣гйа̄-мукти-моха̄нта-да̄трӣ / ш́итхилита-видхи-ра̄га̄ра̄дхйа-ра̄дхеш́а-дха̄нӣ, виласату хр̣ди нитйам̇ бхакти-сиддха̄нта-ва̄н̣ӣ*',
    '*ом бхур бхувах сваха*',
    '*гаятри-мантра: ом бхур бхувах свах тат савитур вареньям / бхарго девасья дхимахи дхийо йо нах прачодаят.*',
    '*гаятри муралишта-киртана-дханам / радха-падам дхимахи*',
    '*мийате анайа ити майа*',
    '*асато ма̄ сад гама̄йа / та̄масо ма̄ джйотир гама̄йа / мр̣тйор ма̄ амр̣там гама̄йа*',
    '*говиндабхидха мандирашрита / падам хастастха ратнадиват / таттвам таттва видхуттама / кшититале йо даршайан чакратух*',
    '*ш́рӣ-сиддха̄нта-сарасватӣти видито гауд̣ӣйа-гурв-анвайе, бхато бха̄нурива прабха̄та-гагане йо гаура-сам̇кӣрттанаих̣ / ма̄йа̄ва̄да-тимин̇гилодара-гата̄н уддхр̣тйа джӣванима̄н, кр̣ш̣н̣а-према-судха̄бдхи-га̄хан̣а-сукхам̇ пра̄да̄т прабхум̇ там̇ бхадже*'
];

// Шри нама-киртана
// *наче’ джео намер гуне о саб пхала паи ре, (туччха пхале прайас чхеде’ ре) / винод боле джаи ло’йе намер балаи ре, (намер балаи чхеде’ ре)* — «Благодаря силе и трансцендентным качествам Харинамы, я экстатически танцую. Через этот возвышенный процесс ко мне приходит все желаемое! Оставив все тщетные попытки обрести что-либо мирское, Бхактивинода говорит: «Я смог преодолеть все препятствия и *апарадхи* (оскорбления), и теперь я имею возможность повторять *шуддха-нам*!»». (Шрила Бхактивинод Тхакур, «Гитавали» «Шри нама-киртана», 3.5).

// Шри Нама
// *хр̣дайа хаите бале, джихва̄ра агрета чале, ш́абда-рӯпе на̄че анукш̣ан̣а / кан̣т̣хе мора бхан̇ге свара, ан̇га ка̄̐пе тхара тхара, стхира хаите на̄ па̄ре чаран̣а* — «Святое Имя исходит из моего сердца, появляется на языке и постоянно танцует на нем в форме трансцендентного звука. Дыхание прерывается, тело бьет сильная дрожь, а ноги передвигаются сами по себе» (Шрила Бхактивинод Тхакур, «Шаранагати», «Шри Нама-махатмья», 2).

// Siksastakam?
// *вичакшана кори’, декхите чахиле, хойа анкхи-агочара / пунах нахи декхи’, кандайе парана, духкхера нахи тхаке ора* — «Стоит мне пожелать увидеть Его ближе, как вдруг Он становится невидимым! Не видя Его, моя душа плачет, и моему горю нет ни конца, ни края» («Гитавали», Шрила Бхактивинода Тхакур, Раздел 12 — «Шри Шикшаштака», Бенгальские песни, основанные на «Шикшаштаке» Шри Чайтаньи Махапрабху, Песня 8-1, стих 2).

// TODO: think
// sharanagati
// «Кусума-саровара, Манаса-ганга, дочь Калинды Ямуна с ее быстрым течением…» (Шрила Бхактивинода Тхакур, «Радха-кунда тата» (На берегу Радха-кунды), Шаранагати», Бхакти-анукула, песня 4, стих 2).

var SCRIPTURES_MAP = SCRIPTURES.map(obj => {
    return Object.keys(obj).map(id => {
        return {
            id: id,
            text: obj[id],
            set: new Set(id.split(' '))
        };
    });
});

var debug_counter = 1;
var debug_not_found_dict = {};

class Footnote {

    constructor(documentFile, nodes) {
        this.documentFile = documentFile;
        this.nodes = nodes;

        this.md = this.getMD();

        // Lower case without punctuation to search matches position.
        var words = this.md.toLowerCase().split(/[\u00A0 \?,\.\-"\(\)\[\]\/»«—\*\n‑–—]+/);
        this.words_str = words.join(' ');

        // Revemo digints for words set
        this.words_set = new Set(this.words_str.split(/[ \d]+/).filter(i => !!i && i.length > 1));

        var scriptureNumbers = this.getScripturesNubmers();
        if (scriptureNumbers.length > 0) {
            this.scripture_numbers = scriptureNumbers;
        }
        var scriptureNames = this.getScripturesNames();
        if (scriptureNames.length > 0) {
            this.scripture_names = scriptureNames;
        }

        this.scripture_names_with_numbers = this.getScripturesNameWithNumber();

        this.shloka = this.getScriptureShloka();

        documentFile.factory.addFootnote(this);
    }

    getScripturesNameWithNumber() {
        if (this.scripture_names && this.scripture_numbers) {

            var items = [...this.scripture_names, ...this.scripture_numbers];

            items.sort((a, b) => a.idx - b.idx);

            var result = [];
            var currentName = {};
            var prevIdxEnd = 0;
            var lastSequenceNumber; // Skip 1, 2, 3, 4.
            items.forEach(item => {
                if ((result.length === 0 // Skip first names without numbers.
                    || !currentName.name) && item.name) {
                    currentName.name = item.name;
                    lastSequenceNumber = null;

                } else if (currentName.name && item.value) {
                    currentName.number = item.value;
                    result.push(currentName);
                    currentName = {};
                    lastSequenceNumber = null;

                } else if (result.length > 0 
                            && !currentName.name 
                            && item.value
                            && item.idx - prevIdxEnd <= 3 // This is just next number.
                        ) {
                    // Copy last scripture with another verse number.

                    currentName.name = result[result.length - 1].name;
                    currentName.number = item.value;
                    result.push(currentName);
                    currentName = {};
                    lastSequenceNumber = null;

                } else {

                    // Skip sequences.
                    var skipSequence = false;
                    if (item.value && /\d+/.test(item.value)) {
                        var intValue = parseInt(item.value)
                        if (!lastSequenceNumber && intValue === 1) {
                            // Start sequence.
                            lastSequenceNumber = intValue;
                            skipSequence = true;
                        } else if (lastSequenceNumber && (lastSequenceNumber + 1) === intValue) {
                            lastSequenceNumber = intValue;
                            skipSequence = true;
                        } else {
                            lastSequenceNumber = null;    
                        }
                    } else {
                        lastSequenceNumber = null;
                    }

                    // if (!skipSequence) {
                    //     console.log('---error scriptures', debug_counter++)
                    //     console.log('---error scriptures', this.md)
                    //     console.log('---error scriptures', item)
                    //     console.log('---error scriptures', items)
                    // }
                }

                if (item.value) {
                    // Store last number end position.
                    prevIdxEnd = item.idx + item.value.length;
                }
            });

            return result;
        }
    }

    getScripturesNubmers() {
        var re = /\d+(?:[\.–-]\d+)*/g;
        var match;
        var result = [];
        var lastIdx = 0;
        while (match = re.exec(this.md)) {
            var idx = this.words_str.indexOf(match[0].replace(/\D/g, ' '), lastIdx);
            result.push({
                idx: idx,
                value: match[0]
            });
            lastIdx = idx + match[0].length;
        }
        return result;
    }

    getScripturesNames() {
        var match_scriptures_lists = SCRIPTURES_MAP.map(scriptures_list => {
            return scriptures_list.filter(sm => { 
                return sm.set.intersection(this.words_set).size === sm.set.size 
            });
        }).filter(i => i.length);

        var result = [];

        if (match_scriptures_lists.length > 0) {

            match_scriptures_lists.forEach(m_list => {

                m_list.find(m => {
                    var idxs = getIndicesOf(this.words_str, m.id);
                    if (idxs.length === 0){
                        var shortcut = NAMES_SEARCH_SHORTCUTS[m.id];
                        if (typeof shortcut === 'string') {
                            idxs = getIndicesOf(this.words_str, shortcut);
                        } else if (Array.isArray(shortcut)){
                            shortcut.find(s => {
                                idxs = getIndicesOf(this.words_str, s);
                                return idxs.length > 0;
                            });
                        }
                    }
                    
                    if (idxs.length > 0) {
                        idxs.forEach(idx => {
                            result.push({
                                idx: idx,
                                name: m.text
                            });
                        });
                        return true;
                    }
                });

                
            });
        }

        return result;
    }

    getScriptureShloka() {
        var m = this.md.trim().match(/^\*[^\*]+\*/);
        if (m) {
            var shloka = m[0].toLowerCase();
            var found = SHLOKAS.find(s => {
                if (Array.isArray(s)) {
                    return s.find(sub => shloka === sub);
                } else {
                    if (shloka === s) {
                        return true;
                    }
                }
            });
            if (found) {
                if (Array.isArray(found)) {
                    return found[0];
                } else {
                    return found;
                }
            }
        }
    }

    getUsedScripturesWithNamesItems() {
        if (this.scripture_names_with_numbers?.length) {
            return this.scripture_names_with_numbers;
        }
    }

    getUsedScripturesNames() {
        if (this.scripture_names_with_numbers?.length) {
            return this.scripture_names_with_numbers.map(i => i.name);
        }
    }

    getUsedScripturesNamesWithNubmers() {
        if (this.scripture_names_with_numbers?.length) {
            return this.scripture_names_with_numbers.map(i => `${i.name} ${i.number}`);
        }
    }

    getScriptureName() {
        if (this.scripture_names_with_numbers?.length) {
            return this.scripture_names_with_numbers[0].name;
        }
    }

    getScriptureNameWithNumber() {
        if (this.scripture_names_with_numbers?.length) {
            return `${this.scripture_names_with_numbers[0].name} ${this.scripture_names_with_numbers[0].number}`;
        }
    }

    getMD() {
        var md = '';
    
        this.nodes.forEach(node => {
            switch(node.type) {
                case "footnote":
                case "p":
                    md += node.text  + '\n';
                    break;
                case "code":
                    md += '    ' + node.text  + '\n';
                    break;
                case "br":
                    md += '\n';
                    break;
            }
        });
    
        return md;
    }

    renderDebug() {
        return '# ' + this.nodes[0].id + '\n\n' + this.md;
    }
}

function getIndicesOf(str, searchStr) {
    var searchStrLen = searchStr.length;
    if (searchStrLen == 0) {
        return [];
    }
    var startIndex = 0, index, indices = [];
    while ((index = str.indexOf(searchStr, startIndex)) > -1) {
        indices.push(index);
        startIndex = index + searchStrLen;
    }
    return indices;
}


module.exports = {
    Footnote,
    debug_dict: debug_not_found_dict
};
